<template>
	<div>
	  <div ref="mapContainer" class="map-container"></div>
	</div>
  </template>
  
  <script setup>
  import { onMounted, ref } from 'vue';
  import * as echarts from 'echarts';
  import dataMap from '@/assets/MapData/data.json';
  import macaoMap from '@/assets/MapData/macao.json';
  
  const mapContainer = ref(null);
  
  // 假设的散点数据，您需要根据实际情况调整
  const scatterData = {
  dataMap: [
    { name: '点1', value: [113.55281, 22.18713, 100] },
    { name: '点2', value: [113.55211, 22.20937, 200] },
    { name: '点3', value: [113.53725, 22.19384, 150] },
    { name: '点4', value: [113.55942, 22.15428, 120] },
    { name: '点5', value: [113.57087, 22.13622, 180] },
    { name: '点6', value: [113.56595, 22.20013, 160] },
    { name: '点7', value: [113.56167, 22.22553, 140] },
    { name: '点8', value: [113.53245, 22.15976, 190] },
    { name: '点9', value: [113.52723, 22.21296, 170] },
    { name: '点10', value: [113.54368, 22.22458, 200] }
  ],
  macao: [
    { name: '点1', value: [113.54913, 22.19875, 150] }
  ]
};

  
  // 时间线的数据，表示不同的地图
  const timelineData = ['dataMap', 'macao'];
  
  // 通用系列选项
  const commonSeriesOptions = {
	roam: true,
	emphasis: {
	  label: {
		show: true,
		color: '#fff'
	  }
	},
	itemStyle: {
	  borderColor: 'rgba(147, 235, 248, 1)',
	  borderWidth: 1,
	  areaColor: {
		type: 'radial',
		x: 0.5,
		y: 0.5,
		r: 0.5,
		colorStops: [
		  {
			offset: 0,
			color: 'rgba(147, 235, 248, 0)'
		  },
		  {
			offset: 1,
			color: 'rgba(147, 235, 248, 0.2)'
		  }
		],
		globalCoord: false
	  }
	},
	emphasis: {
	  itemStyle: {
		areaColor: '#389BB7',
		borderWidth: 0
	  }
	}
  };
  
  // 根据时间线的数据生成不同的地图配置
  const options = timelineData.map((mapName, index) => {
	const mapData = mapName === 'dataMap' ? dataMap : macaoMap;
	echarts.registerMap(mapName, mapData);
	return {
	  series: [
		{
		  ...commonSeriesOptions,
		  type: 'map',
		  map: mapName
		},
		{
		  type: 'effectScatter',
		  coordinateSystem: 'geo',
		  data: scatterData[mapName],
		  symbolSize: (val) => val[2] / 10,
		  showEffectOn: 'render',
		  rippleEffect: {
			brushType: 'stroke'
		  },
		  label: {
			formatter: '{b}',
			position: 'right',
			show: true
		  },
		  itemStyle: {
			color: '#f00'
		  },
		  zlevel: 1
		},
		// 添加新的散点图配置
		{
		  type: 'effectScatter',
		  coordinateSystem: 'geo',
		  data: scatterData[mapName], // 假设使用相同的散点数据
		  symbolSize: function (val) {
			return val[2] / 4;
		  },
		  showEffectOn: 'render',
		  rippleEffect: {
			brushType: 'stroke'
		  },
		  label: {
			normal: {
			  formatter: '{b}',
			  position: 'right',
			  show: true
			}
		  },
		  itemStyle: {
			normal: {
			  color: '#ff0', // 假设颜色为黄色
			  shadowBlur: 5,
			  shadowColor: '#ff0'
			}
		  },
		  zlevel: 1
		}
	  ]
	};
  });
  
  const option = {
	baseOption: {
	  backgroundColor: '#404a59', // 添加深色背景
	  timeline: {
		axisType: 'category',
		autoPlay: true,
		playInterval: 3000,
		data: timelineData,
		label: {
		  formatter: (value) => value === 'dataMap' ? '大湾区' : '澳门'
		}
	  },
	  tooltip: {
		trigger: 'item',
		formatter: '{b}'
	  }
	},
	options: options
  };
  
  onMounted(() => {
	const myChart = echarts.init(mapContainer.value);
	myChart.setOption(option);
  });
  </script>
  
  <style scoped>
  .map-container {
	width: 100%;
	height: 500px;
  }
  </style>
  